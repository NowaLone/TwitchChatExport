name: Release

on:
  push:
    branches: [master]

jobs:
  build_and_test:
    name: Build & Test
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
      - name: Add NuGet Source
        run: dotnet nuget add source --username NowaLone --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/NowaLone/index.json"
      # - name: Add User Secrets
      #   run: |
      #     dotnet user-secrets set "ClientId" "${{ env.TEST_CLIENT_ID }}" --project ./tests/TwitchChatExport.CLI.Tests
      #     dotnet user-secrets set "Token" "${{ secrets.TEST_TOKEN }}" --project ./tests/TwitchChatExport.CLI.Tests
      - name: Restore Dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
  publish_matrix:
    name: Publish
    needs: [build_and_test]
    permissions: write-all
    strategy:
      matrix:
        runtime: [win-x86, linux-x64, osx-x64, win-arm, linux-arm]
        include:
          - os: windows-latest
            runtime: win-x86
          - os: windows-latest
            runtime: win-arm
          - os: ubuntu-latest
            runtime: linux-x64
          - os: ubuntu-latest
            runtime: linux-arm
          - os: macos-latest
            runtime: osx-x64
          # - os: macos-latest
          #   runtime: osx-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
      - name: Add NuGet Source
        run: dotnet nuget add source --username NowaLone --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/NowaLone/index.json"
      - name: Publish ${{ matrix.runtime }}
        run: dotnet publish -c release -f net6.0 -r ${{ matrix.runtime }} --sc -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=None -p:DebugSymbols=false
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          tag: v${{ env.GitVersion_SemVer }}
          name: v${{ env.GitVersion_SemVer }}
          draft: true
          prerelease: false
          artifacts: "src/TwitchChatExport.CLI/bin/release/net6.0/${{ matrix.runtime }}/publish/TwitchChatExport.CLI*"
